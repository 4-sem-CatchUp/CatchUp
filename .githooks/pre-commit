#!/bin/sh

REPO_ROOT="$(git rev-parse --show-toplevel)"
echo "Running pre-commit checks for monorepo at $REPO_ROOT"

# -------------------------------
# Backend formatting
# -------------------------------
echo "Running backend formatters..."
BACKEND_DIR="$REPO_ROOT/backend"

# Format solution
dotnet format "$BACKEND_DIR/CatchUp.Social.sln"

# Change to backend-file, where local tool manifest lies.
cd "$BACKEND_DIR" || exit 1

# Restore local tools (CSharpier) fra backend manifest
dotnet tool restore

# Run CSharpier via local tool
dotnet tool run csharpier format "Social.Core"

# Stage backend changes
git add -u "$BACKEND_DIR"
echo "Backend formatting completed."

# -------------------------------
# Frontend lint & tests
# -------------------------------
FRONTEND_DIR="$REPO_ROOT/frontend"
cd "$FRONTEND_DIR" || exit 1

# Ensure local node_modules bin is used
ESLINT_BIN="./node_modules/.bin/eslint"
VITEST_BIN="./node_modules/.bin/vitest"

# Run eslint and vitest
if [ -f "$ESLINT_BIN" ]; then
    $ESLINT_BIN .
    ESLINT_STATUS=$?
else
    echo "WARNING: eslint not found. Skipping frontend lint."
    ESLINT_STATUS=0
fi

if [ -f "$VITEST_BIN" ]; then
    $VITEST_BIN
    VITEST_STATUS=$?
else
    echo "WARNING: vitest not found. Skipping frontend tests."
    VITEST_STATUS=0
fi

# Stage any frontend changes (prettier/fixable lint)
git add -u "$FRONTEND_DIR"

# Show warning messages if frontend fails, but do NOT block commit
if [ $ESLINT_STATUS -ne 0 ]; then
    echo "WARNING: Frontend lint - eslint reported errors. Please fix them!"
fi

if [ $VITEST_STATUS -ne 0 ]; then
    echo "WARNING: Frontend tests - vitest reported failures. Please fix them!"
fi

echo "Pre-commit completed. Commit will continue even if frontend has errors."
exit 0
